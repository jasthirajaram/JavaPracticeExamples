package com.crud.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.crud.model.Books;
import com.crud.repository.BookRepository;
import com.crud.service.BookService;
import com.crud.serviceimpl.BooksServiceImpl;

@RestController
@RequestMapping("/books")
public class BookController {
	@Autowired(required = true)
	BookService bookService;
	@Autowired(required = true)
	BookRepository repository;

	@RequestMapping(value = "/save", method = RequestMethod.POST)
    //Insert method
	public ResponseEntity<Books> save(@RequestBody Books books) {
		Books book = bookService.saveBooks(books);
		return new ResponseEntity<Books>(book, HttpStatus.OK);
	}
	
    //Get all ID method
	@RequestMapping(value = "/getall", method = RequestMethod.GET)
	public ResponseEntity<List<Books>> getAll(){
		List<Books> b = bookService.getAllBooks();
		return new ResponseEntity<List<Books>>(b, HttpStatus.OK);
		
	}
	
	//Update data
    @RequestMapping(value ="/update", method = RequestMethod.PUT)
    public ResponseEntity<Books> update(@RequestBody Books books) {
		Books book = bookService.updateBooks(books);
		return new ResponseEntity<Books>(book, HttpStatus.OK);
	}
    
	//Get by name method
	@RequestMapping(value = "getByName", method = RequestMethod.GET)
	public ResponseEntity<List<Books>> getBybookName(@RequestParam String bookName) {
		return new ResponseEntity<List<Books>>(bookService.findBybookName(bookName), HttpStatus.OK);
	}
	
	@RequestMapping(value="delete",method = RequestMethod.DELETE)
	public ResponseEntity<Books> deleteById(@PathVariable int id){
		
		return new ResponseEntity<Books>(bookService.deleteBooks(id),HttpStatus.OK);
	}
}
